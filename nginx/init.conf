
upstream nextjs_upstream {
  server nextjs:3000;
}
upstream minio_upstream {
  server minio:9000;
}

server {
    listen 80 default_server;
    include       mime.types;
    default_type  application/octet-stream;
    server_name sample.hu www.sample.hu;
    return 301 https://$server_name$request_uri;
     server_tokens off;
}

server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;

    server_name sample.hu;
    server_tokens off;
    ssl_certificate      /etc/ssl/certificate.crt; 
    ssl_certificate_key  /etc/ssl/private.key;

    gzip on;
    gzip_proxied any;
    gzip_comp_level 4;
    gzip_types text/css application/javascript image/svg+xml;


    location / {
      proxy_pass http://nextjs_upstream;
      client_max_body_size 100M;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
      chunked_transfer_encoding off;
      client_body_buffer_size    128k;
  }

    location /storage/ {
        if ($request_uri ~* "/storage/(.*)") { 
                proxy_pass  http://minio_upstream/$1;
        }
      # proxy_set_header Host minio:9000;     
      client_max_body_size 100M;  
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host            $http_host;
      # proxy_set_header X-Forwarded-For $remote_addr;
      proxy_connect_timeout 300;
      # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      chunked_transfer_encoding off;
    }


}


 





